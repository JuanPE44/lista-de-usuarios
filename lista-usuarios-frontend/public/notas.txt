# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

<div className='flex gap-2 items-center flex-none absolute right-3'> 
  <img className='w-7 h-7 rounded-full' src={'user.picture'} alt={'user.name'}/>
  <p>{'user.name'}</p>
  {
    //user && <button onClick={(e)=> cerrarSesion(e)} className='inline-flex justify-center rounded-lg text-sm py-2 px-3 bg-red-600 text-white hover:bg-red-300'>cerrar sesion</button>
  }
</div>
<div>
{
  //!user ? <div id='google-button'></div> : ''              
}
</div>


// import useGlobalUser from "../hooks/useGlobalUser";
//import { useEffect } from "react";
//import jwt_decode from 'jwt-decode'


/*
  const google = window.google;


  const iniciarSesion = (respuesta) => {
    const userObject = jwt_decode(respuesta.credential)
    setUser(userObject)
  }

  const cerrarSesion = () => {
    setUser(null)

    google.accounts.id.renderButton(
      document.getElementById('google-button'),
      { theme: 'outline', size: 'large'}
    )
  }

  useEffect(()=> {

    //google global 

    google.accounts.id.initialize({
      client_id: '234225550479-aj4ka3ba9h1duhmr0nilmm3q74jrqmd2.apps.googleusercontent.com',
      callback: iniciarSesion
    })

    google.accounts.id.renderButton(
      document.getElementById('google-button'),
      { theme: 'outline', size: 'large'}
    )

  }, [google])

  */



  {cargando ? <Spinner/> : 
      (
        <ul className="grid gap-x-8 gap-y-10 lg:grid-cols-2 justify-center pb-10">
          {usuarios && usuarios.map((usuario) => {
              return (
                <Usuario
                  key={usuario.id || 'key'}
                  id={usuario.id}
                  nombre={usuario.nombre}
                  email={usuario.email}
                  urlImg={usuario.urlImg}
                />
              );              
          })}
        </ul>
      )}